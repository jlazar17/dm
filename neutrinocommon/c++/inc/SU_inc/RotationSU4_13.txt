(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=cos(th)*suv.components[1] - sin(th)*(cos(del)*suv.components[6] + sin(del)*suv.components[9]);
(suv_rot) . components[2]+=(cos(th)*cos(th) - cos(2*del)*sin(th)*sin(th))*suv.components[2] + cos(del)*sin(th)*(-2*sin(del)*sin(th)*suv.components[8] + cos(th)*(suv.components[5] + sqrt(3)*suv.components[10]));
(suv_rot) . components[3]+=cos(th)*suv.components[3] + sin(th)*(-(cos(del)*suv.components[11]) + sin(del)*suv.components[14]);
(suv_rot) . components[4]+=cos(th)*suv.components[4] + sin(th)*(-(sin(del)*suv.components[6]) + cos(del)*suv.components[9]);
(suv_rot) . components[5]+=(-2*cos(del)*sin(2*th)*suv.components[2] + (3 + cos(2*th))*suv.components[5] - 2*sin(th)*(2*cos(th)*sin(del)*suv.components[8] + sqrt(3)*sin(th)*suv.components[10]))/4.;
(suv_rot) . components[6]+=cos(del)*sin(th)*suv.components[1] + sin(del)*sin(th)*suv.components[4] + cos(th)*suv.components[6];
(suv_rot) . components[7]+=suv.components[7];
(suv_rot) . components[8]+=-(sin(2*del)*sin(th)*sin(th)*suv.components[2]) + (cos(th)*cos(th) + cos(2*del)*sin(th)*sin(th))*suv.components[8] + cos(th)*sin(del)*sin(th)*(suv.components[5] + sqrt(3)*suv.components[10]);
(suv_rot) . components[9]+=sin(del)*sin(th)*suv.components[1] - cos(del)*sin(th)*suv.components[4] + cos(th)*suv.components[9];
(suv_rot) . components[10]+=(-2*sqrt(3)*sin(th)*sin(th)*suv.components[5] - 2*sqrt(3)*sin(2*th)*(cos(del)*suv.components[2] + sin(del)*suv.components[8]) + (1 + 3*cos(2*th))*suv.components[10])/4.;
(suv_rot) . components[11]+=cos(del)*sin(th)*suv.components[3] + cos(th)*suv.components[11] + sin(del)*sin(th)*suv.components[12];
(suv_rot) . components[12]+=cos(th)*suv.components[12] - sin(th)*(sin(del)*suv.components[11] + cos(del)*suv.components[14]);
(suv_rot) . components[13]+=suv.components[13];
(suv_rot) . components[14]+=-(sin(del)*sin(th)*suv.components[3]) + cos(del)*sin(th)*suv.components[12] + cos(th)*suv.components[14];
(suv_rot) . components[15]+=suv.components[15];
# Makefile.in generated by automake 1.9.6 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/tauola-c---interface
pkglibdir = $(libdir)/tauola-c---interface
pkgincludedir = $(includedir)/tauola-c---interface
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-apple-darwin12.2.1
host_triplet = i686-apple-darwin12.2.1
example_PROGRAMS = taumain_hepevt_example.exe$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3)

### All other examples require HepMC ###
am__append_1 = -R $(HEPMC_DIR)/lib
am__append_2 = -I$(HEPMC_DIR)/include
am__append_3 = -L$(HEPMC_DIR)/lib -lHepMC
am__append_4 = taumain_stand_alone_example.exe

### Taugun & taummk examples (require Pythia8) ###
#am__append_5 = -R $(PYTHIA8_DIR)/lib/archive
#am__append_6 = -I$(PYTHIA8_DIR)/include
#am__append_7 = -L$(PYTHIA8_DIR)/lib/archive -lpythia8 -llhapdfdummy -lhepmcinterface
#am__append_8 = single_tau_gun_example.exe taummk_pythia_example.exe

### Main example (requires Pythia8 and MC-Tester) ###
##am__append_9 = -R $(MCTESTER_DIR)/lib
##am__append_10 = -I$(PYTHIA8_DIR)/include -I$(MCTESTER_DIR)/include -I$(ROOTINC)
##am__append_11 = -L$(MCTESTER_DIR)/lib -lHEPEvent -lHepMCEvent -lMCTester $(ROOTLIBS)
##am__append_12 = taumain_pythia_example.exe
subdir = examples
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/config.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 =  \
	taumain_stand_alone_example.exe$(EXEEXT)
#am__EXEEXT_2 = single_tau_gun_example.exe$(EXEEXT) \
#	taummk_pythia_example.exe$(EXEEXT)
##am__EXEEXT_3 = taumain_pythia_example.exe$(EXEEXT)
am__installdirs = "$(DESTDIR)$(exampledir)"
examplePROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(example_PROGRAMS)
am__single_tau_gun_example_exe_SOURCES_DIST =  \
	single_tau_gun_example.cxx
#am_single_tau_gun_example_exe_OBJECTS = single_tau_gun_example.$(OBJEXT)
single_tau_gun_example_exe_OBJECTS =  \
	$(am_single_tau_gun_example_exe_OBJECTS)
single_tau_gun_example_exe_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
##am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
single_tau_gun_example_exe_DEPENDENCIES =  \
	$(prefix)/lib/libTauolaCxxInterface.so \
	$(prefix)/lib/libTauolaFortran.so $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_taumain_hepevt_example_exe_OBJECTS =  \
	taumain_hepevt_example.$(OBJEXT)
taumain_hepevt_example_exe_OBJECTS =  \
	$(am_taumain_hepevt_example_exe_OBJECTS)
taumain_hepevt_example_exe_LDADD = $(LDADD)
taumain_hepevt_example_exe_DEPENDENCIES =  \
	$(prefix)/lib/libTauolaCxxInterface.so \
	$(prefix)/lib/libTauolaFortran.so $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__taumain_pythia_example_exe_SOURCES_DIST =  \
	taumain_pythia_example.cxx
##am_taumain_pythia_example_exe_OBJECTS = taumain_pythia_example.$(OBJEXT)
taumain_pythia_example_exe_OBJECTS =  \
	$(am_taumain_pythia_example_exe_OBJECTS)
taumain_pythia_example_exe_LDADD = $(LDADD)
taumain_pythia_example_exe_DEPENDENCIES =  \
	$(prefix)/lib/libTauolaCxxInterface.so \
	$(prefix)/lib/libTauolaFortran.so $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__taumain_stand_alone_example_exe_SOURCES_DIST =  \
	taumain_stand_alone_example.cxx
am_taumain_stand_alone_example_exe_OBJECTS =  \
	taumain_stand_alone_example.$(OBJEXT)
taumain_stand_alone_example_exe_OBJECTS =  \
	$(am_taumain_stand_alone_example_exe_OBJECTS)
taumain_stand_alone_example_exe_LDADD = $(LDADD)
taumain_stand_alone_example_exe_DEPENDENCIES =  \
	$(prefix)/lib/libTauolaCxxInterface.so \
	$(prefix)/lib/libTauolaFortran.so $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__taummk_pythia_example_exe_SOURCES_DIST =  \
	taummk_pythia_example.cxx
#am_taummk_pythia_example_exe_OBJECTS = taummk_pythia_example.$(OBJEXT)
taummk_pythia_example_exe_OBJECTS =  \
	$(am_taummk_pythia_example_exe_OBJECTS)
taummk_pythia_example_exe_LDADD = $(LDADD)
taummk_pythia_example_exe_DEPENDENCIES =  \
	$(prefix)/lib/libTauolaCxxInterface.so \
	$(prefix)/lib/libTauolaFortran.so $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(single_tau_gun_example_exe_SOURCES) \
	$(taumain_hepevt_example_exe_SOURCES) \
	$(taumain_pythia_example_exe_SOURCES) \
	$(taumain_stand_alone_example_exe_SOURCES) \
	$(taummk_pythia_example_exe_SOURCES)
DIST_SOURCES = $(am__single_tau_gun_example_exe_SOURCES_DIST) \
	$(taumain_hepevt_example_exe_SOURCES) \
	$(am__taumain_pythia_example_exe_SOURCES_DIST) \
	$(am__taumain_stand_alone_example_exe_SOURCES_DIST) \
	$(am__taummk_pythia_example_exe_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src/config/missing --run automake-1.9
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I/Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/hepmc/build/include 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
HAS_HEPMC_FALSE = #
HAS_HEPMC_TRUE = 
HAS_MCTESTER_FALSE = 
HAS_MCTESTER_TRUE = #
HAS_PYTHIA8_FALSE = 
HAS_PYTHIA8_TRUE = #
HAS_ROOT_CONFIG = 
HEPMC_DIR = /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/hepmc/build
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src/config/missing --run makeinfo
MCTESTER_DIR = 
OBJEXT = o
PACKAGE = tauola-c---interface
PACKAGE_BUGREPORT = tomasz.przedzinski@cern.ch 
PACKAGE_NAME = Tauola C++ Interface
PACKAGE_STRING = Tauola C++ Interface 1.0.6
PACKAGE_TARNAME = tauola-c---interface
PACKAGE_VERSION = 1.0.6
PATH_SEPARATOR = :
PYTHIA8_DIR = 
RANLIB = ranlib
ROOTINC = 
ROOTLIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.0.6
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-apple-darwin12.2.1
build_alias = 
build_cpu = i686
build_os = darwin12.2.1
build_vendor = apple
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-apple-darwin12.2.1
host_alias = 
host_cpu = i686
host_os = darwin12.2.1
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(install_sh) -d
oldincludedir = /usr/include
prefix = /Users/carguelles/Programs/neutrinocommons/neutrinocommon/linked/tauola/src
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
exampledir = $(top_srcdir)/examples
taumain_hepevt_example_exe_SOURCES = taumain_hepevt_example.cxx
INCLUDES = -I$(prefix)/include $(am__append_2) $(am__append_6) \
	$(am__append_10)
AM_LDFLAGS = -R $(prefix)/lib $(am__append_1) $(am__append_5) \
	$(am__append_9)
LDADD = $(FLIBS) $(prefix)/lib/libTauolaCxxInterface.so \
	$(prefix)/lib/libTauolaFortran.so $(am__append_3) \
	$(am__append_7) $(am__append_11)
taumain_stand_alone_example_exe_SOURCES = taumain_stand_alone_example.cxx
#single_tau_gun_example_exe_SOURCES = single_tau_gun_example.cxx
#taummk_pythia_example_exe_SOURCES = taummk_pythia_example.cxx
##taumain_pythia_example_exe_SOURCES = taumain_pythia_example.cxx
all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  examples/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-examplePROGRAMS: $(example_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(exampledir)" || $(mkdir_p) "$(DESTDIR)$(exampledir)"
	@list='$(example_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(examplePROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(exampledir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(examplePROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(exampledir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-examplePROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(example_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(exampledir)/$$f'"; \
	  rm -f "$(DESTDIR)$(exampledir)/$$f"; \
	done

clean-examplePROGRAMS:
	@list='$(example_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
single_tau_gun_example.exe$(EXEEXT): $(single_tau_gun_example_exe_OBJECTS) $(single_tau_gun_example_exe_DEPENDENCIES) 
	@rm -f single_tau_gun_example.exe$(EXEEXT)
	$(CXXLINK) $(single_tau_gun_example_exe_LDFLAGS) $(single_tau_gun_example_exe_OBJECTS) $(single_tau_gun_example_exe_LDADD) $(LIBS)
taumain_hepevt_example.exe$(EXEEXT): $(taumain_hepevt_example_exe_OBJECTS) $(taumain_hepevt_example_exe_DEPENDENCIES) 
	@rm -f taumain_hepevt_example.exe$(EXEEXT)
	$(CXXLINK) $(taumain_hepevt_example_exe_LDFLAGS) $(taumain_hepevt_example_exe_OBJECTS) $(taumain_hepevt_example_exe_LDADD) $(LIBS)
taumain_pythia_example.exe$(EXEEXT): $(taumain_pythia_example_exe_OBJECTS) $(taumain_pythia_example_exe_DEPENDENCIES) 
	@rm -f taumain_pythia_example.exe$(EXEEXT)
	$(CXXLINK) $(taumain_pythia_example_exe_LDFLAGS) $(taumain_pythia_example_exe_OBJECTS) $(taumain_pythia_example_exe_LDADD) $(LIBS)
taumain_stand_alone_example.exe$(EXEEXT): $(taumain_stand_alone_example_exe_OBJECTS) $(taumain_stand_alone_example_exe_DEPENDENCIES) 
	@rm -f taumain_stand_alone_example.exe$(EXEEXT)
	$(CXXLINK) $(taumain_stand_alone_example_exe_LDFLAGS) $(taumain_stand_alone_example_exe_OBJECTS) $(taumain_stand_alone_example_exe_LDADD) $(LIBS)
taummk_pythia_example.exe$(EXEEXT): $(taummk_pythia_example_exe_OBJECTS) $(taummk_pythia_example_exe_DEPENDENCIES) 
	@rm -f taummk_pythia_example.exe$(EXEEXT)
	$(CXXLINK) $(taummk_pythia_example_exe_LDFLAGS) $(taummk_pythia_example_exe_OBJECTS) $(taummk_pythia_example_exe_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/single_tau_gun_example.Po
include ./$(DEPDIR)/taumain_hepevt_example.Po
include ./$(DEPDIR)/taumain_pythia_example.Po
include ./$(DEPDIR)/taumain_stand_alone_example.Po
include ./$(DEPDIR)/taummk_pythia_example.Po

.cxx.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(exampledir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-examplePROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-examplePROGRAMS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-examplePROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-examplePROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-examplePROGRAMS install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-examplePROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
